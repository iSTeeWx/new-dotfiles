#!/bin/sh

#
# autostart
#
riverctl spawn kitty
# riverctl spawn waybar
riverctl spawn '/home/vlad/.config/river/bar.sh'
riverctl spawn '/home/vlad/.config/river/status.sh'
riverctl spawn 'wl-paste --primary --watch wl-copy --primary --clear' # disable middle click paste

#
# general config
#
riverctl background-color 0x000000
riverctl border-width 2
riverctl rule-add ssd # serverside decorations
riverctl border-color-focused 0x7AA0FF
riverctl border-color-unfocused 0x595959
riverctl default-attach-mode bottom # new views spawn at the bottom of the stack
riverctl focus-follows-cursor always
riverctl set-cursor-warp on-focus-change

#
# inputs/outputs
#
riverctl keyboard-layout fr
# keyboard repeat rate
riverctl set-repeat 25 600

riverctl input pointer-2-7-SynPS/2_Synaptics_TouchPad tap enabled
riverctl input pointer-2-7-SynPS/2_Synaptics_TouchPad accel-profile flat
riverctl input pointer-2-7-SynPS/2_Synaptics_TouchPad natural-scroll enabled

riverctl input pointer-2522-23808-COMPANY__USB_Device accel-profile flat

riverctl input pointer-12815-8789-Telink_Wireless_Receiver_Mouse accel-profile flat

riverctl map-switch normal lid close spawn 'waylock -init-color 0x000000 -input-color 0x121212 -fail-color 0x1E1E3E -ignore-empty-password'

riverctl spawn "wlr-randr --output eDP-1 --custom-mode 2560x1440@60"

#
# keymap
#
riverctl map normal Super Return spawn kitty
riverctl map normal Super Space  spawn tofi-drun
riverctl map normal Super B      spawn floorp
riverctl map normal Super ugrave spawn 'waylock -init-color 0x000000 -input-color 0x121212 -fail-color 0x1E1E3E -ignore-empty-password'
# riverctl map normal Super R      spawn 'killall waybar; waybar'
riverctl map normal Super R      spawn 'killall cat; /home/vlad/.config/river/bar.sh'
riverctl map normal Super T      spawn '/home/vlad/.config/river/status.sh'
riverctl map normal Super+Shift T      spawn 'pkill -f status.sh'

riverctl map normal None  Print  spawn 'file=~/$(date +%Y-%m-%d_%H-%m-%S).png && grim -g "$(slurp)" $file && wl-copy < $file'
riverctl map normal Shift Print  spawn 'file=~/$(date +%Y-%m-%d_%H-%m-%S).png && grim $file && wl-copy < $file'

riverctl map normal Super W close

riverctl map normal Super M exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super comma focus-output next
riverctl map normal Super semicolon focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift comma send-to-output next
riverctl map normal Super+Shift semicolon send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super+Shift Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd luatile "decrease_ratio()"
riverctl map normal Super L send-layout-cmd luatile "increase_ratio()"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# float
riverctl map-pointer normal Super BTN_LEFT move-view
riverctl map-pointer normal Super BTN_RIGHT resize-view
riverctl map normal Super+Shift Space toggle-float

# the pain of azerty bindings
riverctl map normal Super ampersand  set-focused-tags $((1 << 0))
riverctl map normal Super eacute     set-focused-tags $((1 << 1))
riverctl map normal Super quotedbl   set-focused-tags $((1 << 2))
riverctl map normal Super apostrophe set-focused-tags $((1 << 3))
riverctl map normal Super parenleft  set-focused-tags $((1 << 4))
# riverctl map normal Super minus      set-focused-tags $((1 << 5))
# riverctl map normal Super egrave     set-focused-tags $((1 << 6))
# riverctl map normal Super underscore set-focused-tags $((1 << 7))
# riverctl map normal Super ccedilla   set-focused-tags $((1 << 8))
# riverctl map normal Super agrave     set-focused-tags $((1 << 9))

riverctl map normal Super+Shift ampersand  set-view-tags $((1 << 0))
riverctl map normal Super+Shift eacute     set-view-tags $((1 << 1))
riverctl map normal Super+Shift quotedbl   set-view-tags $((1 << 2))
riverctl map normal Super+Shift apostrophe set-view-tags $((1 << 3))
riverctl map normal Super+Shift parenleft  set-view-tags $((1 << 4))
# riverctl map normal Super+Shift minus      set-view-tags $((1 << 5))
# riverctl map normal Super+Shift egrave     set-view-tags $((1 << 6))
# riverctl map normal Super+Shift underscore set-view-tags $((1 << 7))
# riverctl map normal Super+Shift ccedilla   set-view-tags $((1 << 8))
# riverctl map normal Super+Shift agrave     set-view-tags $((1 << 9))

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

for mode in normal locked
do
    riverctl map -repeat $mode None XF86AudioRaiseVolume  spawn '$HOME/.local/share/bin/volume.sh up'
    riverctl map -repeat $mode None XF86AudioLowerVolume  spawn '$HOME/.local/share/bin/volume.sh down'
    riverctl map -repeat $mode None XF86AudioMute         spawn '$HOME/.local/share/bin/volume.sh mute'

    riverctl map -repeat $mode None XF86MonBrightnessUp   spawn 'brightnessctl set 10%+'
    riverctl map -repeat $mode None XF86MonBrightnessDown spawn 'brightnessctl set 10%-'
done

#
# rules
#
# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

#
# layout
#
# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout luatile
river-luatile
